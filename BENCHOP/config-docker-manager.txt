#cloud-config

apt_update: true
apt_upgrade: true
packages:
 - python-pip
 - python-dev
 - build-essential
byobu_default: system

write_files:
  - path: /home/ubuntu/lab3_openrc.sh
    content: |
      export OS_AUTH_URL=https://hpc2n.cloud.snic.se:5000/v3

      # With the addition of Keystone we have standardized on the term **project**
      # as the entity that owns the resources.
      export OS_PROJECT_ID=ad5091c4f42e4defb98eb9550f875f4f
      export OS_PROJECT_NAME="SNIC 2017/13-45"
      export OS_USER_DOMAIN_NAME="snic"
      if [ -z "$OS_USER_DOMAIN_NAME" ]; then unset OS_USER_DOMAIN_NAME; fi

      # unset v2.0 items in case set
      unset OS_TENANT_ID
      unset OS_TENANT_NAME

      # In addition to the owning entity (tenant), OpenStack stores the entity
      # performing the action as the **user**.
      echo "Please enter your OpenStack Username for project $OS_PROJECT_NAME, top right of SSC site s9501: "
      read -sr OS_USENAME_INPUT
      export OS_USERNAME=$OS_USENAME_INPUT

      # With Keystone you pass the keystone password.
      echo "Please enter your OpenStack Password for project $OS_PROJECT_NAME as user $OS_USERNAME: "
      read -sr OS_PASSWORD_INPUT
      export OS_PASSWORD=$OS_PASSWORD_INPUT

      # If your configuration has multiple regions, we set that information here.
      # OS_REGION_NAME is optional and only valid in certain environments.
      export OS_REGION_NAME="HPC2N"
      # Don't leave a blank variable, unset it if it was empty
      if [ -z "$OS_REGION_NAME" ]; then unset OS_REGION_NAME; fi

      export OS_INTERFACE=public
      export OS_IDENTITY_API_VERSION=3
  - path: /home/ubuntu/runOnFirstLogin
    content: |
      sudo chown -R ubuntu: /home/ubuntu/
      . lab3_openrc.sh
      git clone https://github.com/terrakz/acc-proj.git
      . .bashrc

runcmd:
 - echo "--- Running BASH commands ---"
 - echo "export PATH=$PATH:/usr/games" >> /home/ubuntu/.bashrc
 - echo "parse_git_branch() {" >> /home/ubuntu/.bashrc
 - echo "git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\\1)/'" >> /home/ubuntu/.bashrc
 - echo "}" >> /home/ubuntu/.bashrc
 - echo "PS1='\[\e[38;5;85m\]\W\[\e[m\]\[\e[38;5;45m\]$(parse_git_branch)\[\e[m\]\[\e[38;5;208m\] \\$\[\e[m\] '" >> /home/ubuntu/.bashrc
 - echo "--- Sourcing .bashrc ---"
 - source /home/ubuntu/.bashrc
 - echo "--- Upgrading pip ---"
 - pip install --upgrade pip
 - apt install software-properties-common
 - add-apt-repository -y cloud-archive:pike
 - apt -y dist-upgrade
 - echo "--- Installing openstackclient ---"
 - apt -y install python-openstackclient
 - echo "--- Installing Docker! ---"
 - apt-get install apt-transport-https ca-certificates curl software-properties-common
 - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
 - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
 - apt-get update
 - apt-get -y upgrade
 - apt-get -y install docker-ce
 - groupadd docker
 - usermod -aG docker ubuntu
 - echo "--- Done with BASH commands ---"
 - docker swarm init --advertise-addr <(ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | grep 192*)

final_message: "------ The system is finally up, after $UPTIME seconds --------"